[tox]
minversion = 3.7.0
skip_missing_interpreters = {env:TOX_SKIP_MISSING_INTERPRETERS:true}
isolated_build = true
envlist = py3{9,10,11},docs,lint,style,pkg

[testenv]
description = Execute Tests
py3:    basepython = python3
py3.9:  basepython = python3.9
py3.10: basepython = python3.10
py3.11: basepython = python3.11
passenv =
    PYTEST_XDIST_PROC_NR
    JENKINS_URL
    JENKINS_USER_ID
    JENKINS_API_TOKEN
deps = -r requirements/test.txt
commands =
    pytest {posargs}

[testenv:docs]
description = Build Documentation
passenv = *
basepython = python3.10
usedevelop = true
deps = -r requirements/docs.txt
commands =
    mkdocs {posargs:build}

[testenv:lint]
description = Static Analysis
deps = -r requirements/lint.txt
commands =
    flakeheaven lint src/ test/
    pylint src/

[testenv:pkg]
description = Check Distribution Package
skip_install = true
deps =
    build
    pyroma
    readme_renderer[md]
    twine
commands_pre =
    pyproject-build --wheel --outdir dist .
commands =
    pyroma .
    twine check dist/*

[testenv:pin]
description = Check Distribution Package
skip_install = true
deps = pip-tools
allowlist_externals = sh
commands =
    pip-compile --generate-hashes --upgrade --output-file=requirements/prod.txt pyproject.toml
    sh -c "for EXTRA in docs lint test; do  \
      cp requirements/prod.txt requirements/$EXTRA.txt ;\
      pip-compile --extra=$EXTRA --generate-hashes --reuse-hashes --output-file=requirements/$EXTRA.txt pyproject.toml ;\
    done"
