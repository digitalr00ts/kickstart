# digitalr00ts base-x kickstart file
#platform=x86, AMD64, or Intel EM64T

text
xconfig

%include base.cfg

%packages
# ### ### ###
# @admin-tools
# ### ### ###
-abrt-desktop
authconfig-gtk
-fros-recordmydesktop
-gnome-disk-utility
-recordmydesktop
setroubleshoot
system-config-date
system-config-keyboard
system-config-language
system-config-users

# ### ### ###
# @base-x
# ### ### ###
glx-utils
mesa-dri-drivers
-plymouth-system-theme
-xorg-x11-drv-armsoc
-xorg-x11-drv-ati
xorg-x11-drv-evdev
xorg-x11-drv-fbdev
-xorg-x11-drv-freedreno
-xorg-x11-drv-geode
xorg-x11-drv-intel
-xorg-x11-drv-mga
xorg-x11-drv-modesetting
xorg-x11-drv-nouveau
-xorg-x11-drv-omap
xorg-x11-drv-openchrome
xorg-x11-drv-qxl
xorg-x11-drv-synaptics
xorg-x11-drv-vesa
-xorg-x11-drv-vmmouse
-xorg-x11-drv-vmware
-xorg-x11-drv-wacom
xorg-x11-server-Xorg
xorg-x11-utils
xorg-x11-xauth
xorg-x11-xinit

# ### ### ###
# @basic-desktop
# ### ### ###
# adwaita-gtk2-theme
# adwaita-icon-theme
# awesome
# dwm
# fedora-icon-theme
# i3
# initial-setup-gui
# lightdm
# metacity
# openbox
# ratpoison
# xmonad-basic

# ### ### ###
@fonts
# ### ### ###

# ### ### ###
# @multimedia
# ### ### ###
PackageKit-gstreamer-plugin
alsa-plugins-pulseaudio
alsa-utils
gstreamer1-plugins-bad-free
gstreamer1-plugins-good
pulseaudio
pulseaudio-module-x11
pulseaudio-utils
# Conditional Packages
-gstreamer-plugins-bad-free
# gstreamer-plugins-espeak
gstreamer-plugins-good

# ### ### ###
# @networkmanager-submodules
# ### ### ###
NetworkManager-bluetooth
NetworkManager-wifi
-NetworkManager-wwan

# ### ### ###
@printing
# ### ### ###
# Conditional Packages
system-config-printer

# @input-methods
# @hardware-support

korora-release-workstation
%end

%pre --log=/tmp/base-x.cfg-pre.log
#!/bin/bash
function block_check () {
  [ -d /sys/block/vda ] && echo vda && return 0
  [ -d /sys/block/sda ] && echo sda && return 0
  [ -d /sys/block/hda ] && echo hda && return 0
  echo "No block device that I recognize" >&2 ; return 1
}

# Initialize global variables if necessary
# Constants
[ -z ${startpath+x} ] && declare -x startpath="$(pwd)"
[ -z ${runpath+x} ] && declare -x runpath='/run/install'
[ -z ${curl_options+x} ] && curl_options='--progress-bar --location --remote-name'
[ -z ${blockdevice+x} ] && declare -x blockdevice=$(block_check) ; [ ! $blockdevice ] && exit 1
# Variables
[ -z ${branch+x} ] && declare -x branch='x'
[ -z ${desktop+x} ] && declare -x desktop=1
[ -z ${cfg+x} ] && declare -x cfg='base-x'

# Checks for kickstart files and scripts
# If not found will pull from Github
if [ ! -f ${startpath}/scripts/curl.sh ] ; then
  echo "Pulling Kicstart files and scripts from Github" >&2
  echo "Using branch: ${branch}" >&2
  mkdir --parent $runpath/scripts && cd $_
  echo -n 'curl.sh: '
  curl ${curl_options} https://github.com/digitalr00ts/korora-kickstart/raw/$branch/scripts/curl.sh
  chmod +x curl.sh
  ${runpath}/scripts/curl.sh
  cd ${startpath}
fi

#   Run scripts
if [ ! -f ${startpath}/partitions.ks ] ; then
  ${runpath}/scripts/partitions.sh || exit 1
  ${runpath}/scripts/vm-guests.sh $([ $desktop -eq 1 ] && echo '--desktop') $([ $blockdevice == 'vda' ] && echo '--qemu')
fi
%end
