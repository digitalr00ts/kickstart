# digitalr00ts xfce kickstart file
#platform=x86, AMD64, or Intel EM64T

text

%packages
# ### ### ###
# @^xfce-desktop-environment
# ### ### ###
# base-x
# standard
# core
# admin-tools
-@dial-up
# fonts
-input-methods
# multimedia
# networkmanager-submodules
-hardware-support
# printing
# guest-desktop-agents
# xfce-desktop

# ### ### ###
# @xfce-apps
# ### ### ###
catfish
-claws-mail
-claws-mail-plugins-archive
-claws-mail-plugins-att-remover
-claws-mail-plugins-attachwarner
-claws-mail-plugins-fetchinfo
-claws-mail-plugins-mailmbox
-claws-mail-plugins-newmail
-claws-mail-plugins-notification
-claws-mail-plugins-pgp
-claws-mail-plugins-rssyl
-claws-mail-plugins-smime
-claws-mail-plugins-spam-report
-claws-mail-plugins-tnef
-claws-mail-plugins-vcalendar
-evince
-galculator
-geany
gparted
-leafpad
-midori
-orage
pidgin
-ristretto
seahorse
transmission
xarchiver
xfce4-clipman-plugin
xfce4-dict-plugin

# ### ### ###
# @xfce-media
# ### ### ###
-asunder
-parole
pavucontrol
-pragha
xfburn

# ### ### ###
# @libreoffice
# ### ### ###
libreoffice-calc
libreoffice-draw
libreoffice-emailmerge
libreoffice-graphicfilter
libreoffice-impress
libreoffice-math
libreoffice-writer
# Optional
-libreoffice-base
-libreoffice-pyuno
#
libreoffice-opensymbol-fonts
libreoffice-pdfimport

# ### ### ###
google-chrome-stable
gpicview
inkscape
mate-calc
meld
pidgin-guifications
pidgin-indicator
pidgin-libnotify
pidgin-otr
pidgin-privacy-please
pidgin-window-merge
pinta
qpdfview
shotwell
smplayer
uget

%end

%include xfce-min.cfg

%pre --log=/tmp/xfce-min.cfg-pre.log
#!/bin/bash
function block_check () {
  [ -d /sys/block/vda ] && echo vda && return 0
  [ -d /sys/block/sda ] && echo sda && return 0
  [ -d /sys/block/hda ] && echo hda && return 0
  echo "No block device that I recognize" >&2 ; return 1
}

# Initialize global variables if necessary
# Constants
[ -z ${startpath+x} ] && declare -x startpath="$(pwd)"
[ -z ${runpath+x} ] && declare -x runpath='/run/install'
[ -z ${curl_options+x} ] && curl_options='--progress-bar --location --remote-name'
[ -z ${blockdevice+x} ] && declare -x blockdevice=$(block_check) ; [ ! $blockdevice ] && exit 1
# Variables
[ -z ${branch+x} ] && declare -x branch='x'
[ -z ${desktop+x} ] && declare -x desktop=1
[ -z ${cfg+x} ] && declare -x cfg='xfce'

# Checks for kickstart files and scripts
# If not found will pull from Github
if [ ! -f ${startpath}/scripts/curl.sh ] ; then
  echo "Pulling Kicstart files and scripts from Github" >&2
  echo "Using branch: ${branch}" >&2
  mkdir --parent $runpath/scripts && cd $_
  echo -n 'curl.sh: '
  curl ${curl_options} https://github.com/digitalr00ts/korora-kickstart/raw/$branch/scripts/curl.sh
  chmod +x curl.sh
  ${runpath}/scripts/curl.sh
  cd ${startpath}
fi

#   Run scripts
if [ ! -f ${startpath}/partitions.ks ] ; then
  ${runpath}/scripts/partitions.sh || exit 1
  ${runpath}/scripts/vm-guests.sh $([ $desktop -eq 1 ] && echo '--desktop') $([ $blockdevice == 'vda' ] && echo '--qemu')
fi
%end
