# digitalr00ts base kickstart file
#platform=x86, AMD64, or Intel EM64T

text

## Optional ##

# network --bootproto=static --ip=192.168.122.99 --netmask=255.255.255.0 --gateway=192.168.122.1 --nameserver=8.8.8.8 --nameserver=8.8.4.4
# services --enabled=fstrim.timer,ksmtuned,lirc,ModemManager,NetworkManager,restorecond,sshd --disabled=spice-vdagentd,abrtd,abrt-ccpp,abrt-oops,abrt-vmcore,abrt-xorg,capi,iprdump,iprinit,iprupdate,iscsi,iscsid,isdn,libvirtd,multipathd,netfs,network,nfs,nfslock,pcscd,rpcbind,rpcgssd,rpcidmapd,rpcsvcgssd,sendmail,sm-client
# firewall --enabled --service=mdns,samba,samba-client,ssh

%include min.cfg
%include repos.ks

%packages
# ### ### ###
# @standard
# ### ### ###
-abrt-cli
acl
at
attr
bash-completion
-bc
bind-utils
bridge-utils
-btrfs-progs
bzip2
cifs-utils
coolkey
-cpio
crontabs
cryptsetup
-cyrus-sasl-plain
dbus
deltarpm
-dnf-langpacks
dos2unix
dosfstools
dump
-ed
ethtool
-fedora-release-notes
file
-fpaste
-fprintd-pam
ftp
gnupg2
hunspell
iptstate
-irda-utils
irqbalance
jwhois
lftp
logrotate
lsof
mailcap
man-pages
mcelog
-mdadm
microcode_ctl
mlocate
mtr
-nano
net-tools
nfs-utils
nmap-ncat
-ntfs-3g
-ntfsprogs
ntsysv
-numactl
pam_krb5
pam_pkcs11
passwdqc
pciutils
pcmciautils
pinfo
-plymouth
psacct
quota
-rdist
-realmd
-rng-tools
-rsh
rsync
rsyslog
setuptool
smartmontools
sos
sssd
stunnel
sudo
symlinks
-talk
tar
tcp_wrappers
tcpdump
-telnet
time
traceroute
-tree
unzip
usbutils
-vconfig
wget
which
-wireless-tools
words
zip

# ### ### ###
# @system-tools
# ### ### ###
-BackupPC
NetworkManager-l2tp
-NetworkManager-openconnect
NetworkManager-openvpn
NetworkManager-vpnc
-bonnie++
chrony
cifs-utils
-jigdo
libreswan
nmap
-ntfs-3g
-openconnect
openldap-clients
openvpn
samba-client
-screen
setserial
-tigervnc
vpnc
-xdelta
-zisofs-tools
-zsh

# ### ### ###
# @headless-management
# ### ### ###
PackageKit
-cockpit
openssh-server
-rolekit
-tog-pegasus

# ### ### ###
dnf-automatic
dnssec-trigger
git
korora-extras
ldns-utils
tmux
vim-enhanced

# ### ### ###
crudini
xmlstarlet

akmods
dkms
dnf-plugin-system-upgrade
redhat-lsb-core
macchanger
NetworkManager-tui
samba
samba-winbind
setools-console
# system-config-firewall-tui
unburden-home-dir

-anaconda*
korora-repos
rpmfusion-free-release
rpmfusion-nonfree-release
virtualbox-release
%end

%pre --log=/tmp/base.cfg-pre.log
##!/bin/bash
function block_check () {
  [ -d /sys/block/vda ] && echo vda && return 0
  [ -d /sys/block/sda ] && echo sda && return 0
  [ -d /sys/block/hda ] && echo hda && return 0
  echo "No block device that I recognize" >&2 ; return 1
}

# Initialize global variables if necessary
# Constants
[ -z ${startpath+x} ] && declare -x startpath="$(pwd)"
[ -z ${runpath+x} ] && declare -x runpath='/run/install'
[ -z ${curl_options+x} ] && curl_options='--progress-bar --location --remote-name'
[ -z ${blockdevice+x} ] && declare -x blockdevice=$(block_check) ; [ ! $blockdevice ] && exit 1
# Variables
[ -z ${branch+x} ] && declare -x branch='master'
[ -z ${desktop+x} ] && declare -x desktop=0
[ -z ${cfg+x} ] && declare -x cfg='base'

# Checks for kickstart files and scripts
# If not found will pull from Github
if [ ! -f ${startpath}/scripts/curl.sh ] ; then
  echo "Pulling Kicstart files and scripts from Github" >&2
  echo "Using branch: ${branch}" >&2
  mkdir --parent $runpath/scripts && cd $_
  echo -n 'curl.sh: '
  curl ${curl_options} https://github.com/digitalr00ts/korora-kickstart/raw/$branch/scripts/curl.sh
  chmod +x curl.sh
  ${runpath}/scripts/curl.sh
  cd ${startpath}
fi

#   Run scripts
if [ ! -f ${startpath}/partitions.ks ] ; then
  ${runpath}/scripts/partitions.sh || exit 1
  ${runpath}/scripts/vm-guests.sh $([ $desktop -eq 1 ] && echo '--desktop') $([ $blockdevice == 'vda' ] && echo '--qemu')
fi
%end

%post
ausearch -c dnssec-trigger- --raw | audit2allow -M mypol
semodule -i mypol.pp

tee /etc/systemd/system/macspoof@.service <<-'EOF'
[Unit]
Description=macchanger on %I
Wants=network-pre.target
Before=network-pre.target
After=sys-subsystem-net-devices-%i.device

[Service]
ExecStart=/usr/bin/macchanger -r %I
Type=oneshot

[Install]
WantedBy=multi-user.target
EOF
%end
