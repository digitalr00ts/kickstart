# digitalr00ts base kickstart file
#platform=x86, AMD64, or Intel EM64T

text
timezone America/Los_Angeles --isUtc --ntpservers=0.pool.ntp.org,1.pool.ntp.org,2.pool.ntp.org,3.pool.ntp.org
url --mirrorlist=http://mirrors.fedoraproject.org/mirrorlist?repo=fedora-$releasever&arch=$basearch

%ksappend https://raw.githubusercontent.com/digitalr00ts/korora-kickstart/master/min.ks
%include partitions.ks

## Optional ##

# network --bootproto=static --ip=192.168.122.99 --netmask=255.255.255.0 --gateway=192.168.122.1 --nameserver=8.8.8.8 --nameserver=8.8.4.4
# services --enabled=fstrim.timer,ksmtuned,lirc,ModemManager,NetworkManager,restorecond,sshd --disabled=spice-vdagentd,abrtd,abrt-ccpp,abrt-oops,abrt-vmcore,abrt-xorg,capi,iprdump,iprinit,iprupdate,iscsi,iscsid,isdn,libvirtd,multipathd,netfs,network,nfs,nfslock,pcscd,rpcbind,rpcgssd,rpcidmapd,rpcsvcgssd,sendmail,sm-client
services --enabled=NetworkManager,sshd,smb --disabled=libvrtd,docker,docker-engine
firewall --enabled --service=samba,ssh

%include https://raw.githubusercontent.com/digitalr00ts/korora-kickstart/master/base.ks
%include https://raw.githubusercontent.com/digitalr00ts/korora-kickstart/master/extras.ks
%include https://raw.githubusercontent.com/digitalr00ts/korora-kickstart/master/x-base.ks
%include https://raw.githubusercontent.com/digitalr00ts/korora-kickstart/master/xfce.ks
%include https://raw.githubusercontent.com/digitalr00ts/korora-kickstart/master/xfce-min.ks
%include https://raw.githubusercontent.com/digitalr00ts/korora-kickstart/master/x-extras.ks

# %pre --log=/tmp/ks-pre.log
#!/bin/bash
# function block_check () {
# [ -d /sys/block/vda ] && echo vda && return 0
# [ -d /sys/block/sda ] && echo sda && return 0
# [ -d /sys/block/hda ] && echo hda && return 0
# echo "No block device that I recognize" >&2 ; return 1
#}

# Initialize global variables if necessary
# Constants
# [ -z ${startpath+x} ] && declare -x startpath="$(pwd)"
# [ -z ${runpath+x} ] && declare -x runpath='/run/install'
# [ -z ${curl_options+x} ] && curl_options='--progress-bar --location --remote-name'
# [ -z ${blockdevice+x} ] && declare -x blockdevice=$(block_check) ; [ ! $blockdevice ] && exit 1
# Variables
# [ -z ${branch+x} ] && declare -x branch='master'
# [ -z ${desktop+x} ] && declare -x desktop=0
# [ -z ${cfg+x} ] && declare -x cfg='server'

# Checks for kickstart files and scripts
# If not found will pull from Github
# if [ ! -f ${startpath}/scripts/curl.sh ] ; then
#   echo "Pulling Kicstart files and scripts from Github" >&2
#   echo "Using branch: ${branch}" >&2
#   mkdir --parent $runpath/scripts && cd $_
#   echo -n 'curl.sh: '
#   curl ${curl_options} https://github.com/digitalr00ts/korora-kickstart/raw/$branch/scripts/curl.sh
#   chmod +x curl.sh
#   ${runpath}/scripts/curl.sh
#   cd ${startpath}
# fi

# Obtain scripts
# mkdir --parent ${runpath}/scripts && cd $_
# echo -n 'partitions.sh: '
# curl ${curl_options} https://github.com/digitalr00ts/korora-kickstart/raw/$branch/scripts/partitions.sh
#chmod +x ./partitions.sh
# cd $startpath

#   Run scripts
# [ ! -f ${startpath}/partitions.ks ] && ${runpath}/scripts/partitions.sh || exit 1
#   ${runpath}/scripts/vm-guests.sh $([ $desktop -eq 1 ] && echo '--desktop') $([ $blockdevice == 'vda' ] && echo '--qemu')
# fi
# %end
